<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GeeK of Y2Y</title>
  
  <subtitle>Y2Y&#39;s Home</subtitle>
  <link href="https://yzy666699.github.io/atom.xml" rel="self"/>
  
  <link href="https://yzy666699.github.io/"/>
  <updated>2024-07-08T17:01:58.701Z</updated>
  <id>https://yzy666699.github.io/</id>
  
  <author>
    <name>Y2Y</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>逆向分析</title>
    <link href="https://yzy666699.github.io/2023/07/08/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>https://yzy666699.github.io/2023/07/08/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</id>
    <published>2023-07-07T16:00:00.000Z</published>
    <updated>2024-07-08T17:01:58.701Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;逆向分析&quot;&gt;&lt;a href=&quot;#逆向分析&quot; class=&quot;headerlink&quot; title=&quot;逆向分析&quot;&gt;&lt;/a&gt;逆向分析&lt;/h1&gt;&lt;h2 id=&quot;记一次对勒索病毒的分析&quot;&gt;&lt;a href=&quot;#记一次对勒索病毒的分析&quot; class=&quot;headerlink&quot; title=&quot;记一次对勒索病毒的分析&quot;&gt;&lt;/a&gt;记一次对勒索病毒的分析&lt;/h2&gt;&lt;h3 id=&quot;知识汇总&quot;&gt;&lt;a href=&quot;#知识汇总&quot; class=&quot;headerlink&quot; title=&quot;知识汇总&quot;&gt;&lt;/a&gt;知识汇总&lt;/h3&gt;&lt;p&gt;在PE（Portable Executable，可移植可执行）文件格式中，各种数据结构和表都是通过偏移量来访问的。特定的偏移量，如60和120，通常与PE文件的标准布局有关。具体来说：&lt;/p&gt;</summary>
    
    
    
    <category term="Reverse" scheme="https://yzy666699.github.io/categories/Reverse/"/>
    
    
    <category term="Reverse analysis" scheme="https://yzy666699.github.io/tags/Reverse-analysis/"/>
    
  </entry>
  
  <entry>
    <title>静态软件分析</title>
    <link href="https://yzy666699.github.io/2023/05/06/%E9%9D%99%E6%80%81%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/"/>
    <id>https://yzy666699.github.io/2023/05/06/%E9%9D%99%E6%80%81%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/</id>
    <published>2023-05-05T16:00:00.000Z</published>
    <updated>2024-07-08T17:57:04.649Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;静态软件分析&quot;&gt;&lt;a href=&quot;#静态软件分析&quot; class=&quot;headerlink&quot; title=&quot;静态软件分析&quot;&gt;&lt;/a&gt;静态软件分析&lt;/h1&gt;&lt;h2 id=&quot;part-0x01-Introduction&quot;&gt;&lt;a href=&quot;#part-0x01-Introduction&quot; class=&quot;headerlink&quot; title=&quot;part 0x01 Introduction&quot;&gt;&lt;/a&gt;part 0x01 Introduction&lt;/h2&gt;&lt;h3 id=&quot;additionvalue&quot;&gt;&lt;a href=&quot;#additionvalue&quot; class=&quot;headerlink&quot; title=&quot;additionvalue&quot;&gt;&lt;/a&gt;additionvalue&lt;/h3&gt;&lt;p&gt;不断的认识自己，发掘自己，明白什么东西使自己快乐起来，什么东西愿意花时间去搞，思考&lt;/p&gt;
&lt;h3 id=&quot;security-amply&quot;&gt;&lt;a href=&quot;#security-amply&quot; class=&quot;headerlink&quot; title=&quot;security amply&quot;&gt;&lt;/a&gt;security amply&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;污点分析&amp;#x2F;信息流分析&amp;#x2F;数据流分析&amp;#x2F;控制流分析&amp;#x2F;过程间分析&amp;#x2F;指针分析&amp;#x2F;别名分析&amp;#x2F;符号执行&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内存泄露和空指针引用&lt;/strong&gt;：如果一个指针被错误地使用（例如，被设为 null 或者指向已经释放的内存），程序可能会崩溃或者产生未定义的行为。指针分析可以帮助检测这类错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;缓冲区溢出&lt;/strong&gt;：如果一个指针被用来写入超过了预分配的内存区域，就可能导致缓冲区溢出，这是一种常见的安全漏洞。通过对指针的使用进行分析，我们可以找出可能的缓冲区溢出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;未授权的内存访问&lt;/strong&gt;：如果一个指针被用来访问不应该被访问的内存区域（例如，其他用户的数据或者敏感的系统资源），这可能是一个安全问题。指针分析可以帮助我们发现这样的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据竞态条件&lt;/strong&gt;：如果多个线程或者进程共享一段内存，并且对这段内存的访问没有被正确地同步，可能会导致数据竞态条件，这也是一种常见的安全问题。通过指针分析，我们可以确定哪些内存区域被多个线程或者进程共享，从而帮助我们找出可能的数据竞态条件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="ACM" scheme="https://yzy666699.github.io/categories/ACM/"/>
    
    
    <category term="algorithm" scheme="https://yzy666699.github.io/tags/algorithm/"/>
    
    <category term="Analusis" scheme="https://yzy666699.github.io/tags/Analusis/"/>
    
  </entry>
  
  <entry>
    <title>AI制作图片二维码</title>
    <link href="https://yzy666699.github.io/2022/08/11/%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%88%B6%E4%BD%9C/"/>
    <id>https://yzy666699.github.io/2022/08/11/%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%88%B6%E4%BD%9C/</id>
    <published>2022-08-10T16:00:00.000Z</published>
    <updated>2024-07-08T17:03:29.464Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;AI制作图片二维码&quot;&gt;&lt;a href=&quot;#AI制作图片二维码&quot; class=&quot;headerlink&quot; title=&quot;AI制作图片二维码&quot;&gt;&lt;/a&gt;AI制作图片二维码&lt;/h1&gt;&lt;h2 id=&quot;二维码解析&quot;&gt;&lt;a href=&quot;#二维码解析&quot; class=&quot;headerlink&quot; title=&quot;二维码解析&quot;&gt;&lt;/a&gt;二维码解析&lt;/h2&gt;&lt;p&gt;将二维码转换成矢量图，并采用在线网站进行二维码解析&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://yzy666699.github.io/categories/AI/"/>
    
    
    <category term="AI" scheme="https://yzy666699.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Pandorabox之透明代理</title>
    <link href="https://yzy666699.github.io/2017/02/07/Pandorabox-transparent-proxy/"/>
    <id>https://yzy666699.github.io/2017/02/07/Pandorabox-transparent-proxy/</id>
    <published>2017-02-06T16:00:00.000Z</published>
    <updated>2024-07-08T15:38:23.551Z</updated>
    
    
    <summary type="html">&lt;p&gt;先修改Lan接口，避免在无线中继的时候发生本地Lan接口与wwan接口发生冲突导致无法登陆路由器。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;网络 -&amp;gt; Lan -&amp;gt; IPv4地址， 设置为 192.168.33.1&lt;/code&gt;更改之后需要重新连接一下网络。&lt;/p&gt;
&lt;p&gt;透明代理使用&lt;code&gt;shadowsocks-libev&lt;/code&gt;和&lt;code&gt;ChinDNS&lt;/code&gt;实现。使用ssh登陆路由器，安装所需软件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh root@192.168.33.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opkg update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opkg install shadowsocks-libev luci-app-shadowsocks ChinaDNS luci-app-chinadns --force-checksum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个版本的软件源有点问题，所以直接&lt;code&gt;opkg install&lt;/code&gt;基本上都过不了&lt;code&gt;sha256sum&lt;/code&gt;检测，所以需要加上&lt;code&gt;--force-checksum&lt;/code&gt;参数强制忽略。两个luci界面都有zh-cn汉化包，为了节省路由器空间，就不装了。&lt;/p&gt;</summary>
    
    
    
    <category term="Openwrt" scheme="https://yzy666699.github.io/categories/Openwrt/"/>
    
    
    <category term="路由器" scheme="https://yzy666699.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    <category term="科学上网" scheme="https://yzy666699.github.io/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    <category term="Shadowsocks" scheme="https://yzy666699.github.io/tags/Shadowsocks/"/>
    
    <category term="ChinaDNS" scheme="https://yzy666699.github.io/tags/ChinaDNS/"/>
    
  </entry>
  
</feed>
